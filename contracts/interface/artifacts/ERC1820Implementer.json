{
	"deploy": {
		"VM:-": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"main:1": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"ropsten:3": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"rinkeby:4": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"kovan:42": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"g√∂rli:5": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"Custom": {
			"linkReferences": {},
			"autoDeployLib": true
		}
	},
	"data": {
		"bytecode": {
			"functionDebugData": {},
			"generatedSources": [],
			"linkReferences": {},
			"object": "608060405234801561001057600080fd5b5061011d806100206000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c8063249cb3fa14602d575b600080fd5b603c603836600460ad565b604e565b60405190815260200160405180910390f35b60008281526020819052604081205460ff161560a35760405173455243313832305f4143434550545f4d4147494360601b602082015260340160405160208183030381529060405280519060200120905060a7565b5060005b92915050565b6000806040838503121560bf57600080fd5b8235915060208301356001600160a01b038116811460dc57600080fd5b80915050925092905056fea2646970667358221220f1ba149afda0c00567a9aefbe130193c8e0d1ec393115e27fc00ae2c0d43e64464736f6c63430008070033",
			"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x11D DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x28 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x249CB3FA EQ PUSH1 0x2D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3C PUSH1 0x38 CALLDATASIZE PUSH1 0x4 PUSH1 0xAD JUMP JUMPDEST PUSH1 0x4E JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH1 0xA3 JUMPI PUSH1 0x40 MLOAD PUSH20 0x455243313832305F4143434550545F4D41474943 PUSH1 0x60 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x34 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0xA7 JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH1 0xBF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH1 0xDC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALL 0xBA EQ SWAP11 REVERT LOG0 0xC0 SDIV PUSH8 0xA9AEFBE130193C8E 0xD 0x1E 0xC3 SWAP4 GT 0x5E 0x27 0xFC STOP 0xAE 0x2C 0xD NUMBER 0xE6 DIFFICULTY PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
			"sourceMap": "141:637:0:-:0;;;;;;;;;;;;;;;;;;;"
		},
		"deployedBytecode": {
			"functionDebugData": {
				"@canImplementInterfaceForAddress_33": {
					"entryPoint": 78,
					"id": 33,
					"parameterSlots": 2,
					"returnSlots": 1
				},
				"abi_decode_tuple_t_bytes32t_address": {
					"entryPoint": 173,
					"id": null,
					"parameterSlots": 2,
					"returnSlots": 2
				},
				"abi_encode_tuple_packed_t_stringliteral_a2ef4600d742022d532d4747cb3547474667d6f13804902513b2ec01c848f4b4__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
					"entryPoint": null,
					"id": null,
					"parameterSlots": 1,
					"returnSlots": 1
				},
				"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
					"entryPoint": null,
					"id": null,
					"parameterSlots": 2,
					"returnSlots": 1
				}
			},
			"generatedSources": [
				{
					"ast": {
						"nodeType": "YulBlock",
						"src": "0:828:1",
						"statements": [
							{
								"nodeType": "YulBlock",
								"src": "6:3:1",
								"statements": []
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "101:267:1",
									"statements": [
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "147:16:1",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "156:1:1",
																	"type": "",
																	"value": "0"
																},
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "159:1:1",
																	"type": "",
																	"value": "0"
																}
															],
															"functionName": {
																"name": "revert",
																"nodeType": "YulIdentifier",
																"src": "149:6:1"
															},
															"nodeType": "YulFunctionCall",
															"src": "149:12:1"
														},
														"nodeType": "YulExpressionStatement",
														"src": "149:12:1"
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "dataEnd",
																"nodeType": "YulIdentifier",
																"src": "122:7:1"
															},
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "131:9:1"
															}
														],
														"functionName": {
															"name": "sub",
															"nodeType": "YulIdentifier",
															"src": "118:3:1"
														},
														"nodeType": "YulFunctionCall",
														"src": "118:23:1"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "143:2:1",
														"type": "",
														"value": "64"
													}
												],
												"functionName": {
													"name": "slt",
													"nodeType": "YulIdentifier",
													"src": "114:3:1"
												},
												"nodeType": "YulFunctionCall",
												"src": "114:32:1"
											},
											"nodeType": "YulIf",
											"src": "111:52:1"
										},
										{
											"nodeType": "YulAssignment",
											"src": "172:33:1",
											"value": {
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "195:9:1"
													}
												],
												"functionName": {
													"name": "calldataload",
													"nodeType": "YulIdentifier",
													"src": "182:12:1"
												},
												"nodeType": "YulFunctionCall",
												"src": "182:23:1"
											},
											"variableNames": [
												{
													"name": "value0",
													"nodeType": "YulIdentifier",
													"src": "172:6:1"
												}
											]
										},
										{
											"nodeType": "YulVariableDeclaration",
											"src": "214:45:1",
											"value": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "244:9:1"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "255:2:1",
																"type": "",
																"value": "32"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "240:3:1"
														},
														"nodeType": "YulFunctionCall",
														"src": "240:18:1"
													}
												],
												"functionName": {
													"name": "calldataload",
													"nodeType": "YulIdentifier",
													"src": "227:12:1"
												},
												"nodeType": "YulFunctionCall",
												"src": "227:32:1"
											},
											"variables": [
												{
													"name": "value",
													"nodeType": "YulTypedName",
													"src": "218:5:1",
													"type": ""
												}
											]
										},
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "322:16:1",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "331:1:1",
																	"type": "",
																	"value": "0"
																},
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "334:1:1",
																	"type": "",
																	"value": "0"
																}
															],
															"functionName": {
																"name": "revert",
																"nodeType": "YulIdentifier",
																"src": "324:6:1"
															},
															"nodeType": "YulFunctionCall",
															"src": "324:12:1"
														},
														"nodeType": "YulExpressionStatement",
														"src": "324:12:1"
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "281:5:1"
															},
															{
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "292:5:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "307:3:1",
																						"type": "",
																						"value": "160"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "312:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "303:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "303:11:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "316:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "299:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "299:19:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "288:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "288:31:1"
															}
														],
														"functionName": {
															"name": "eq",
															"nodeType": "YulIdentifier",
															"src": "278:2:1"
														},
														"nodeType": "YulFunctionCall",
														"src": "278:42:1"
													}
												],
												"functionName": {
													"name": "iszero",
													"nodeType": "YulIdentifier",
													"src": "271:6:1"
												},
												"nodeType": "YulFunctionCall",
												"src": "271:50:1"
											},
											"nodeType": "YulIf",
											"src": "268:70:1"
										},
										{
											"nodeType": "YulAssignment",
											"src": "347:15:1",
											"value": {
												"name": "value",
												"nodeType": "YulIdentifier",
												"src": "357:5:1"
											},
											"variableNames": [
												{
													"name": "value1",
													"nodeType": "YulIdentifier",
													"src": "347:6:1"
												}
											]
										}
									]
								},
								"name": "abi_decode_tuple_t_bytes32t_address",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "headStart",
										"nodeType": "YulTypedName",
										"src": "59:9:1",
										"type": ""
									},
									{
										"name": "dataEnd",
										"nodeType": "YulTypedName",
										"src": "70:7:1",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "value0",
										"nodeType": "YulTypedName",
										"src": "82:6:1",
										"type": ""
									},
									{
										"name": "value1",
										"nodeType": "YulTypedName",
										"src": "90:6:1",
										"type": ""
									}
								],
								"src": "14:354:1"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "565:79:1",
									"statements": [
										{
											"expression": {
												"arguments": [
													{
														"name": "pos",
														"nodeType": "YulIdentifier",
														"src": "582:3:1"
													},
													{
														"hexValue": "455243313832305f4143434550545f4d41474943",
														"kind": "string",
														"nodeType": "YulLiteral",
														"src": "587:22:1",
														"type": "",
														"value": "ERC1820_ACCEPT_MAGIC"
													}
												],
												"functionName": {
													"name": "mstore",
													"nodeType": "YulIdentifier",
													"src": "575:6:1"
												},
												"nodeType": "YulFunctionCall",
												"src": "575:35:1"
											},
											"nodeType": "YulExpressionStatement",
											"src": "575:35:1"
										},
										{
											"nodeType": "YulAssignment",
											"src": "619:19:1",
											"value": {
												"arguments": [
													{
														"name": "pos",
														"nodeType": "YulIdentifier",
														"src": "630:3:1"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "635:2:1",
														"type": "",
														"value": "20"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "626:3:1"
												},
												"nodeType": "YulFunctionCall",
												"src": "626:12:1"
											},
											"variableNames": [
												{
													"name": "end",
													"nodeType": "YulIdentifier",
													"src": "619:3:1"
												}
											]
										}
									]
								},
								"name": "abi_encode_tuple_packed_t_stringliteral_a2ef4600d742022d532d4747cb3547474667d6f13804902513b2ec01c848f4b4__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "pos",
										"nodeType": "YulTypedName",
										"src": "549:3:1",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "end",
										"nodeType": "YulTypedName",
										"src": "557:3:1",
										"type": ""
									}
								],
								"src": "373:271:1"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "750:76:1",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "760:26:1",
											"value": {
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "772:9:1"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "783:2:1",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "768:3:1"
												},
												"nodeType": "YulFunctionCall",
												"src": "768:18:1"
											},
											"variableNames": [
												{
													"name": "tail",
													"nodeType": "YulIdentifier",
													"src": "760:4:1"
												}
											]
										},
										{
											"expression": {
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "802:9:1"
													},
													{
														"name": "value0",
														"nodeType": "YulIdentifier",
														"src": "813:6:1"
													}
												],
												"functionName": {
													"name": "mstore",
													"nodeType": "YulIdentifier",
													"src": "795:6:1"
												},
												"nodeType": "YulFunctionCall",
												"src": "795:25:1"
											},
											"nodeType": "YulExpressionStatement",
											"src": "795:25:1"
										}
									]
								},
								"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "headStart",
										"nodeType": "YulTypedName",
										"src": "719:9:1",
										"type": ""
									},
									{
										"name": "value0",
										"nodeType": "YulTypedName",
										"src": "730:6:1",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "tail",
										"nodeType": "YulTypedName",
										"src": "741:4:1",
										"type": ""
									}
								],
								"src": "649:177:1"
							}
						]
					},
					"contents": "{\n    { }\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value1 := value\n    }\n    function abi_encode_tuple_packed_t_stringliteral_a2ef4600d742022d532d4747cb3547474667d6f13804902513b2ec01c848f4b4__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos) -> end\n    {\n        mstore(pos, \"ERC1820_ACCEPT_MAGIC\")\n        end := add(pos, 20)\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n}",
					"id": 1,
					"language": "Yul",
					"name": "#utility.yul"
				}
			],
			"immutableReferences": {},
			"linkReferences": {},
			"object": "6080604052348015600f57600080fd5b506004361060285760003560e01c8063249cb3fa14602d575b600080fd5b603c603836600460ad565b604e565b60405190815260200160405180910390f35b60008281526020819052604081205460ff161560a35760405173455243313832305f4143434550545f4d4147494360601b602082015260340160405160208183030381529060405280519060200120905060a7565b5060005b92915050565b6000806040838503121560bf57600080fd5b8235915060208301356001600160a01b038116811460dc57600080fd5b80915050925092905056fea2646970667358221220f1ba149afda0c00567a9aefbe130193c8e0d1ec393115e27fc00ae2c0d43e64464736f6c63430008070033",
			"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x28 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x249CB3FA EQ PUSH1 0x2D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3C PUSH1 0x38 CALLDATASIZE PUSH1 0x4 PUSH1 0xAD JUMP JUMPDEST PUSH1 0x4E JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH1 0xA3 JUMPI PUSH1 0x40 MLOAD PUSH20 0x455243313832305F4143434550545F4D41474943 PUSH1 0x60 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x34 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0xA7 JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH1 0xBF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH1 0xDC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALL 0xBA EQ SWAP11 REVERT LOG0 0xC0 SDIV PUSH8 0xA9AEFBE130193C8E 0xD 0x1E 0xC3 SWAP4 GT 0x5E 0x27 0xFC STOP 0xAE 0x2C 0xD NUMBER 0xE6 DIFFICULTY PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
			"sourceMap": "141:637:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;325:305;;;;;;:::i;:::-;;:::i;:::-;;;795:25:1;;;783:2;768:18;325:305:0;;;;;;;;501:7;521:31;;;;;;;;;;;;;518:108;;;223:40;;-1:-1:-1;;;223:40:0;;;575:35:1;626:12;;223:40:0;;;;;;;;;;;;213:51;;;;;;562:27;;;;518:108;-1:-1:-1;610:9:0;518:108;325:305;;;;:::o;14:354:1:-;82:6;90;143:2;131:9;122:7;118:23;114:32;111:52;;;159:1;156;149:12;111:52;182:23;;;-1:-1:-1;255:2:1;240:18;;227:32;-1:-1:-1;;;;;288:31:1;;278:42;;268:70;;334:1;331;324:12;268:70;357:5;347:15;;;14:354;;;;;:::o"
		},
		"gasEstimates": {
			"creation": {
				"codeDepositCost": "57000",
				"executionCost": "105",
				"totalCost": "57105"
			},
			"external": {
				"canImplementInterfaceForAddress(bytes32,address)": "2668"
			},
			"internal": {
				"_setInterface(string memory)": "infinite"
			}
		},
		"methodIdentifiers": {
			"canImplementInterfaceForAddress(bytes32,address)": "249cb3fa"
		}
	},
	"abi": [
		{
			"inputs": [
				{
					"internalType": "bytes32",
					"name": "interfaceHash",
					"type": "bytes32"
				},
				{
					"internalType": "address",
					"name": "addr",
					"type": "address"
				}
			],
			"name": "canImplementInterfaceForAddress",
			"outputs": [
				{
					"internalType": "bytes32",
					"name": "",
					"type": "bytes32"
				}
			],
			"stateMutability": "view",
			"type": "function"
		}
	]
}